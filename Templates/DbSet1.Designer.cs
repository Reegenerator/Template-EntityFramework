// -------------------------------------------------------
// Automatically generated with Kodeo's Reegenerator for NON-COMMERCIAL USE
// Generator: RgenTemplate (internal)
// Generation date: 2014-07-09 04:42
// Generated by: GTS-DEV\tedyp_000
//-------------------------------------------------------
namespace Templates
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using EnvDTE80;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reegenerator", "2.0.6.0")]
    [Kodeo.Reegenerator.Generators.TemplateDisplayAttribute(DisplayName="DbSet", Description="DbSet", HideInDialog=false)]
    public partial class DbSet : RgenLib.TaggedCodeRenderer
    {
        
        /// <summary>
        ///Renders the code as defined in the source script file.
        ///</summary>
        ///<param name="output">The instance where the rendered code will be written to.</param>
        ///<param name="candidates"></param>
        public virtual void GenDbset(System.IO.StringWriter output, IEnumerable<DbsetCandidate> candidates)
        {
 foreach(var c in candidates){
            output.Write("\r\npublic DbSet<");
            output.Write( c.Class.FullName );
            output.Write("> ");
            output.Write(c.SetName );
            output.Write("{get;set;}\r\n");
 }
            output.WriteLine();
        }
        
        /// <summary>
        ///Renders the code as defined in the source script file.
        ///</summary>
        ///<param name="output">The instance where the rendered code will be written to.</param>
        ///<param name="sets"></param>
        public virtual void GenGetbytype(System.IO.StringWriter output, IEnumerable<CodeProperty2> sets)
        {
            output.Write("     public DbSet GetDbset<TEntity>() where TEntity : class\r\n        {\r\n         " +
                    "   return GetDbset(typeof (TEntity));\r\n        }\r\n    public DbSet GetDbset(Type" +
                    " entityType)\r\n    {\r\n\t\t");
 foreach(var c in sets){
            output.Write("\r\n\t\tif (entityType == typeof(");
            output.Write(GetDbsetGenericParameter( c.Type) );
            output.Write(")) return ");
            output.Write( c.Name );
            output.Write(";\r\n\t\t");
 } 
            output.Write("\r\n        return null;\r\n\r\n    }");
            output.WriteLine();
        }
    }
}
